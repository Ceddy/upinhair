// VARIABLES
$text-color: #eeeeee;
$yellow: #ffdd1c;
$red: #fc0707;
$green: #23BE94;

$cancel_red: #ed1c2a;
$confirm_green: #21a400;

$anim_speed: 0.3s;

// TYPOGRAPHY
$headline_font: 'galaxiepolaris', Helevetica, sans-serif;
$body_font :  'proxima-nova', Helvetica, Arial, sans-serif;

// GENERAL
@mixin remove-appearance-style($value) {
  -webkit-appearance: $value;
     -moz-appearance: $value;
          appearance: $value;
}

@mixin remove-select-style($value) {
  -webkit-user-select: $value;
     -moz-user-select: $value;
      -ms-user-select: $value;
}

@mixin clearfix {
  content: ".";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
}

@mixin box-sizing($property) {
  -webkit-box-sizing: $property;
     -moz-box-sizing: $property;
          box-sizing: $property;
}

@mixin box-shadow($property...) {
  -webkit-box-shadow: $property;
     -moz-box-shadow: $property;
          box-shadow: $property;
}

// Mixin : Border Radius
@mixin border-radius-round($amount) {
  -webkit-border-radius: $amount;
     -moz-border-radius: $amount;
          border-radius: $amount;

  -webkit-background-clip: padding-box;
     -moz-background-clip: padding;
          background-clip: padding-box;
}

@mixin border-radius-none {
  -webkit-border-radius: 0px;
     -moz-border-radius: 0px;
          border-radius: 0px;
}

@mixin border-radius-none-bottom {
  -webkit-border-bottom-right-radius: 0px;
  -webkit-border-bottom-left-radius: 0px;
     -moz-border-radius-bottomright: 0px;
     -moz-border-radius-bottomleft: 0px;
          border-bottom-right-radius: 0px;
          border-bottom-left-radius: 0px;
}

@mixin border-radius-none-top {
  -webkit-border-top-right-radius: 0px;
  -webkit-border-top-left-radius: 0px;
     -moz-border-radius-topright: 0px;
     -moz-border-radius-topleft: 0px;
          border-top-right-radius: 0px;
          border-top-left-radius: 0px;
}

@mixin border-radius-round-top($amount_top) {
  -webkit-border-top-right-radius: $amount_top;
  -webkit-border-top-left-radius: $amount_top;
     -moz-border-radius-topright: $amount_top;
     -moz-border-radius-topleft: $amount_top;
          border-top-right-radius: $amount_top;
          border-top-left-radius: $amount_top;
}

@mixin border-radius-round-bottom($amount) {
  -webkit-border-bottom-left-radius: $amount;
  -webkit-border-bottom-right-radius: $amount;
     -moz-border-radius-bottomleft: $amount;
     -moz-border-radius-bottomright: $amount;
          border-bottom-left-radius: $amount;
          border-bottom-right-radius: $amount;
}

@mixin border-radius-round-bottom-left($amount) {
  -webkit-border-bottom-left-radius: $amount;
     -moz-border-radius-bottomleft: $amount;
          border-bottom-left-radius: $amount;
}

@mixin border-radius-round-bottom-right($amount) {
  -webkit-border-bottom-right-radius: $amount;
     -moz-border-radius-bottomright: $amount;
          border-bottom-right-radius: $amount;
}

@mixin border-radius-round-top-left($amount) {
  -webkit-border-top-left-radius: $amount;
     -moz-border-radius-topleft: $amount;
          border-top-left-radius: $amount;
}

@mixin border-radius-round-top-right($amount) {
  -webkit-border-top-right-radius: $amount;
     -moz-border-radius-topright: $amount;
          border-top-right-radius: $amount;
}

@mixin border-radius-round-left($amount) {
  -webkit-border-bottom-left-radius: $amount;
  -webkit-border-top-left-radius: $amount;
     -moz-border-radius-bottomleft: $amount;
     -moz-border-radius-topleft: $amount;
          border-bottom-left-radius: $amount;
          border-top-left-radius: $amount;
}

@mixin border-radius-round-right($amount) {
  -webkit-border-bottom-right-radius: $amount;
  -webkit-border-top-right-radius: $amount;
     -moz-border-radius-bottomright: $amount;
     -moz-border-radius-topright: $amount;
          border-bottom-right-radius: $amount;
          border-top-right-radius: $amount;
}

// Mixin : Transitions
@mixin fade-transition($speed) {
  opacity: 1;
  -webkit-transition: opacity;
  -webkit-transition-timing-function: ease-out;
  -webkit-transition-duration: $speed;
  -moz-transition: opacity;
  -moz-transition-timing-function: ease-out;
  -moz-transition-duration: $speed;
  transition: opacity;
  transition-timing-function: ease-out;
  transition-duration: $speed;
}

@mixin transition($property...) {
  -webkit-transition: $property;
     -moz-transition: $property;
      -ms-transition: $property;
       -o-transition: $property;
          transition: $property;
}

// Mixin : Transforms

@mixin perspective($amount) {
  -webkit-perspective: $amount;
     -moz-perspective: $amount;
      -ms-perspective: $amount;
       -o-perspective: $amount;
          perspective: $amount;
}

@mixin perspective-origin($amountX, $amountY) {
  -webkit-perspective-origin: $amountX, $amountY;
     -moz-perspective-origin: $amountX, $amountY;
      -ms-perspective-origin: $amountX, $amountY;
       -o-perspective-origin: $amountX, $amountY;
          perspective-origin: $amountX, $amountY;
}

@mixin backface-visibility($property) {
  -webkit-backface-visibility: $property;
     -moz-backface-visibility: $property;
      -ms-backface-visibility: $property;
       -o-backface-visibility: $property;
          backface-visibility: $property;
}

@mixin transform($property) {
  -webkit-transform: $property;
     -moz-transform: $property;
      -ms-transform: $property;
       -o-transform: $property;
          transform: $property;
}

// Mixin : Animation

@mixin apply_animation($name, $duration, $count, $timing_function) {
  animation-name: $name;
  animation-duration: $duration;
  animation-iteration-count: $count;
  animation-timing-function: $timing_function;

  -o-animation-name: $name;
  -o-animation-duration: $duration;
  -o-animation-iteration-count: $count;
  -o-animation-timing-function: $timing_function;

  -moz-animation-name: $name;
  -moz-animation-duration: $duration;
  -moz-animation-iteration-count: $count;
  -moz-animation-timing-function: $timing_function;

  -webkit-animation-name: $name;
  -webkit-animation-duration: $duration;
  -webkit-animation-iteration-count: $count;
  -webkit-animation-timing-function: $timing_function;
}

// Mixin : Form Styles
@mixin form-elements {
  @include border-radius-round(3px);
  outline: none;
  border: 1px solid rgba(56, 55, 56, 1);
  border-bottom: 1px solid rgba(84, 84, 84, 1);
  background: #181818;
  padding: 2px 9px;
  color: #cccccc;
}

// Mixin : Background Image Gradients
@mixin background-image-gradient($color_one, $color_two) {
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($color_one), to($color_two));
  background-image:    -moz-linear-gradient($color_one, $color_two);
  background-image:     -ms-linear-gradient($color_one, $color_two);
  background-image:      -o-linear-gradient($color_one, $color_two);
  background-image:         linear-gradient($color_one, $color_two);
}


@mixin font($type: body) {
  @if $type == body {
    font-family: 'proxima-nova', Helvetica, Arial, sans-serif;
  } @else if $type == head {
    font-family: 'galaxiepolaris', Helvetica, Arial, sans-serif;
  }
}

@mixin optimize-text-rendering {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

// Mixin : Typography
@mixin smallfont($font_color) {
  font-family: $body_font;
  color: $font_color;
  font-size: 11px;
  line-height: 14px;
}

// Disabled Notice - USED TO TURN OFF FEATURES FOR BASIC
@mixin disabled_notice {
  display: none;
  &.show { display: block; }
  a { text-decoration: underline; }
}


// Button Styles

@mixin button_base ($colour) {
  @include background-image-gradient(lighten($colour, 3%), darken($colour, 6%));
  @include border-radius-round(25px);
  @include box-shadow(inset 0px 1px 0px lighten($colour, 7%));

  border: 1px solid darken($colour, 9%);
  border-bottom-color: darken($colour, 10%);
  border-top-color: darken($colour, 5%);
  display: inline-block;
  font-family: $body_font;
  font-size: 13px;
  line-height: 1.3;
  padding: 10px 18px;
  text-align: center;
  text-decoration: none;
  text-rendering: optimizeLegibility;
  text-shadow: 0 1px 1px darken($colour, 12%);
  white-space: nowrap;
}

@mixin button_base_active ($colour) {
  @include background-image-gradient(darken($colour, 2%), darken($colour, 1%));
  @include box-shadow(inset 0px 2px 0px darken($colour, 6%));
  border: 1px solid darken($colour, 10%);
}

@mixin button_base_hover ($colour) {
  @include background-image-gradient(lighten($colour, 4%), darken($colour, 2%));
  @include box-shadow(inset 0px 1px 0px lighten($colour, 9%));
  cursor: pointer;
}

@mixin format_button($colour) {
  @include button_base($colour);

  font-weight: bold;

  &:hover { @include button_base_hover($colour); }
  &:active { @include button_base_active($colour); }
}


// Highlight effect

@mixin highlight-image($gradient_start, $gradient_end, $border_sides, $border_top, $border_bottom, $shadow_opacity, $border_radius) {
  border: 1px solid $border_sides;
  border-top: solid 1px $border_top;
  border-bottom: solid 1px $border_bottom;

  @include background-image-gradient($gradient_start, $gradient_end);
  @include border-radius-round($border_radius);

  -webkit-box-shadow: 0px 2px 0px 0px rgba(0, 0, 0, $shadow_opacity);
     -moz-box-shadow: 0px 2px 0px 0px rgba(0, 0, 0, $shadow_opacity);
          box-shadow: 0px 2px 0px 0px rgba(0, 0, 0, $shadow_opacity);

  img {
    border: solid 1px rgba(255,255,255,0.3);
  }
}

@mixin highlight-image-clear($colour) {
  @include highlight-image($colour, $colour, $colour, $colour, $colour, 0, 0px);
}

// Gradient Overlay for green button

@mixin gradient-vertical ($start, $stop) {
  background-image: -webkit-gradient(linear, left top, left bottom, from($start), to($stop));
  background-image: -webkit-linear-gradient(top, $start, $stop);
  background-image:    -moz-linear-gradient(top, $start, $stop);
  background-image:      -o-linear-gradient(top, $start, $stop);
  background-image:         linear-gradient(to bottom, $start, $stop);
  background-repeat: repeat-x;
}


// POPUPS

// Basic mixing to create an overlay with a colour and final opacity.

@mixin overlay($colour, $opacity) {
  background: $colour;
  height: 100%;
  opacity: 0;
  position: fixed;
  top: 0; left: 0;
  width: 100%;
  z-index: 99998;

  @include transition(opacity $anim_speed ease);

  &.show { opacity: $opacity; }
}

// Basic mixin to center a fixed element. Takes width and height then uses it for 
// an offset to center.

@mixin popup($width, $height) {
  height: $height;
  position: fixed;
  top: 50%; left: 50%;
  margin-top: -$height/2;
  margin-left: -$width/2;
  opacity: 0;
  width: $width;
  z-index: 99999;

  @include transition(opacity $anim_speed ease);

  &.show { opacity: 1; }
}

// ICONS

// General use mixin for ss-icons, accepts colour and bg colour, consistent size
// across entire application. Simple to override.

@mixin ss-close($colour, $colour_active, $size: 10px, $bg_hover: rgba(0,0,0,0.1), $bg_active: rgba(0,0,0,0.3)) {
  color: $colour;
  display: block;
  font-size: $size;
  text-align: center;

  &:hover {
    background: $bg_hover;
  }
  &:active {
    color: $colour_active;
    background: $bg_active;
  }
}

// ANIMATIONS
@-webkit-keyframes fade {
  0% { opacity: 1; }
  100% { opacity: 0.5; }
}

@-webkit-keyframes rotate {
  0% { @include transform(rotateZ(0deg)); }
  100% { @include transform(rotateZ(360deg)); }
}

@-moz-keyframes rotate {
  0% { @include transform(rotateZ(0deg)); }
  100% { @include transform(rotateZ(360deg)); }
}

@-o-keyframes rotate {
  0% { @include transform(rotateZ(0deg)); }
  100% { @include transform(rotateZ(360deg)); }
}

@keyframes rotate {
  0% { @include transform(rotateZ(0deg)); }
  100% { @include transform(rotateZ(360deg)); }
}